const gql = require('graphql-tag');

const updateTest = gql`
  mutation UpdateTest(
    $input: UpdateTestInput!
    $condition: ModelTestConditionInput
  ) {
    updateTest(input: $input, condition: $condition) {
      id
      status
      clientID
      labID
      employeeID
      siteID
      baseSiteID
      batch
      barcode
      owner
      result
      resultDate
      resultDateTime
      employee_demographics
      site_name
      clientName
      labName
      phoneNumber
      test_number
      email
      tester_name
      isAntigen
      referenceID
      test_type
      createdBy
      testerPhone
      submittedBy
      submittedByName
      StampBy
      StampByName
      emailSend
      quarantinedStart
      quarantinedEnd
      startTimeStamp
      timerStatus
      startDate
      expired
      beenTimed
      done
      sr_no
      sequenceNo
      createSource
      isFalsePositive
      isLucira
      patternTestAnswer
      schrID
      createdAt
      timezone
      schrTestID
      _version
      _deleted
      _lastChangedAt
      updatedAt
      lab {
        id
        name
        logo
        contact_name
        contact_phone
        user_id
        contact_email
        tubes_provided
        lab_director
        clia_number
        testing_notes
        street
        city_state_zip
        lab_contacts
        default_antigen
        antigen_notes
        default_molecular
        default_other
        molecular_notes
        other_notes
        sendInsurance
        barCodeProvided
        barCodeAlertLimit
        whiteLabel
        whiteLabelPackage
        showOnSummaryScreen
        orderCodes
        isArchive
        positiveCount
        negativeCount
        postitiveDate
        totalTest
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
        Tests {
          nextToken
          startedAt
        }
      }
      site {
        id
        name
        clientID
        contact_name
        contact_phone
        contact_email
        antigen
        automateTestType
        user_id
        show_contacts
        insurance_required
        sendInsuranceCard
        resetTestDay
        startDate
        endDate
        orderKitDate
        enableShipment
        showOnSummaryScreen
        messageTested
        messageResulted
        messagePositive
        printLabel
        isArchive
        vaccinationCard
        externalTest
        externalTestType
        externalTestDuration
        externalTestAdmit
        patternTesting
        patternHippa
        preRegistration
        admit
        positiveCount
        negativeCount
        postitiveDate
        totalTest
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
        Tests {
          nextToken
          startedAt
        }
      }
      client {
        id
        name
        contact_name
        contact_phone
        contact_email
        hippa
        hippaFile
        resultType
        showOnSummaryScreen
        whiteLabel
        whiteLabelPackage
        isArchive
        positiveCount
        negativeCount
        postitiveDate
        totalTest
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
        Sites {
          nextToken
          startedAt
        }
        Employees {
          nextToken
          startedAt
        }
        Tests {
          nextToken
          startedAt
        }
      }
      employee {
        id
        first
        last
        dob
        id_number
        clientID
        street
        street2
        city
        state
        zip
        countryCode
        phone_number
        sex
        email
        isVaccinated
        insurance_name
        insurance_number
        subID
        site_name
        isNew
        isPreRegistered
        medflowDomain
        mdID
        schrID
        whiteGlove
        employeeType
        vaccinationCardUpload
        vaccinationDetails
        vaccinationType
        vaccinationDate
        vaccinationLocation
        vaccinationDateS
        vaccinationLocationS
        isExternalTest
        externalTestDate
        externalTestType
        externalTestResult
        preRegisterShowId
        patternConsent
        hippaConsent
        insuranceScan
        createdAt
        _version
        _deleted
        _lastChangedAt
        updatedAt
        Client {
          id
          name
          contact_name
          contact_phone
          contact_email
          hippa
          hippaFile
          resultType
          showOnSummaryScreen
          whiteLabel
          whiteLabelPackage
          isArchive
          positiveCount
          negativeCount
          postitiveDate
          totalTest
          _version
          _deleted
          _lastChangedAt
          createdAt
          updatedAt
        }
        Tests {
          nextToken
          startedAt
        }
      }
    }
  }
`;

const deleteTest = gql`
  mutation DeleteTest(
    $input: DeleteTestInput!
    $condition: ModelTestConditionInput
  ) {
    deleteTest(input: $input, condition: $condition) {
      id
      status
      clientID
      labID
      employeeID
      siteID
      baseSiteID
      batch
      barcode
      owner
      result
      resultDate
      resultDateTime
      employee_demographics
      site_name
      clientName
      labName
      phoneNumber
      test_number
      email
      tester_name
      isAntigen
      referenceID
      test_type
      createdBy
      testerPhone
      submittedBy
      submittedByName
      StampBy
      StampByName
      emailSend
      quarantinedStart
      quarantinedEnd
      startTimeStamp
      timerStatus
      startDate
      expired
      beenTimed
      done
      sr_no
      appVer
      sequenceNo
      createSource
      isFalsePositive
      isLucira
      patternTestAnswer
      schrID
      schrTestID
      createdAt
      timezone
      _version
      _deleted
      _lastChangedAt
      updatedAt
    }
  }
`;

module.exports = {updateTest, deleteTest};